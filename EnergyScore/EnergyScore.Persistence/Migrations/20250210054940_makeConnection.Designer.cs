// <auto-generated />
using System;
using EnergyScore.Persistence.DBConnection;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EnergyScore.Persistence.Migrations
{
    [DbContext(typeof(DbConnect))]
    [Migration("20250210054940_makeConnection")]
    partial class makeConnection
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EnergyScore.Domain.Entityies.About", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<float>("AverageCeilingHeight")
                        .HasColumnType("real");

                    b.Property<int>("AzimuthOfFrontOfHome")
                        .HasColumnType("integer");

                    b.Property<float>("ConditionedBuildingVolume")
                        .HasColumnType("real");

                    b.Property<float>("ConditionedFloorArea")
                        .HasColumnType("real");

                    b.Property<int>("NumberofBedrooms")
                        .HasColumnType("integer");

                    b.Property<float>("NumberofConditionedFloorsAboveGrade")
                        .HasColumnType("real");

                    b.Property<string>("OrientationOfFrontOfHome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResidentialFacilityType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("YearBuilt")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Abouts");
                });

            modelBuilder.Entity("EnergyScore.Domain.Entityies.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Zipcode")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Addresss");
                });

            modelBuilder.Entity("EnergyScore.Domain.Entityies.AirInfiltrationMeasurement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AboutId")
                        .HasColumnType("uuid");

                    b.Property<float>("AirLeakage")
                        .HasColumnType("real");

                    b.Property<double>("HousePressure")
                        .HasColumnType("double precision");

                    b.Property<string>("LeakinessDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UnitofMeasure")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AboutId");

                    b.ToTable("AirInfiltrationMeasurements");
                });

            modelBuilder.Entity("EnergyScore.Domain.Entityies.Building", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AboutId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("EnergyScore.Domain.Entityies.AirInfiltrationMeasurement", b =>
                {
                    b.HasOne("EnergyScore.Domain.Entityies.About", "About")
                        .WithMany("AirInfiltrationMeasurements")
                        .HasForeignKey("AboutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("About");
                });

            modelBuilder.Entity("EnergyScore.Domain.Entityies.About", b =>
                {
                    b.Navigation("AirInfiltrationMeasurements");
                });
#pragma warning restore 612, 618
        }
    }
}
